## WARNING: This file was autogenerated!
## Manual modifications will be overwritten
## unless ignore: true is set in generate.yaml!
## Last Modification: 19:45:37 on 02-29-2024.

apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  labels:
    company.internal/provider: privatecomposition
  name: xnetwork.aws.company.intern
spec:
  compositeTypeRef:
    apiVersion: aws.company.intern/v1alpha1
    kind: CompositeNetwork
  patchSets:
  - name: Name
    patches:
    - fromFieldPath: metadata.labels[crossplane.io/claim-name]
      toFieldPath: metadata.annotations[crossplane.io/external-name]
      type: FromCompositeFieldPath
  - name: External-Name
    patches:
    - fromFieldPath: metadata.annotations[crossplane.io/external-name]
      policy:
        fromFieldPath: Optional
      toFieldPath: metadata.annotations[crossplane.io/external-name]
      type: FromCompositeFieldPath
  - name: Common
    patches:
    - fromFieldPath: metadata.labels['crossplane.io/claim-name']
      policy:
        fromFieldPath: Optional
      toFieldPath: metadata.labels['crossplane.io/claim-name']
      type: FromCompositeFieldPath
    - fromFieldPath: metadata.labels['crossplane.io/claim-namespace']
      policy:
        fromFieldPath: Optional
      toFieldPath: metadata.labels['crossplane.io/claim-namespace']
      type: FromCompositeFieldPath
    - fromFieldPath: metadata.labels['crossplane.io/composite']
      policy:
        fromFieldPath: Optional
      toFieldPath: metadata.labels['crossplane.io/composite']
      type: FromCompositeFieldPath
    - fromFieldPath: metadata.labels['external-name']
      policy:
        fromFieldPath: Optional
      toFieldPath: metadata.labels['external-name']
      type: FromCompositeFieldPath
  - name: Parameters
    patches:
    - fromFieldPath: spec.claimRef.apiVersion
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.claimRef.apiVersion
      type: FromCompositeFieldPath
    - fromFieldPath: spec.claimRef.kind
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.claimRef.kind
      type: FromCompositeFieldPath
    - fromFieldPath: spec.claimRef.name
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.claimRef.name
      type: FromCompositeFieldPath
    - fromFieldPath: spec.claimRef.namespace
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.claimRef.namespace
      type: FromCompositeFieldPath
    - fromFieldPath: spec.compositionRef.name
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.compositionRef.name
      type: FromCompositeFieldPath
    - fromFieldPath: spec.compositionRevisionRef.name
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.compositionRevisionRef.name
      type: FromCompositeFieldPath
    - fromFieldPath: spec.compositionSelector.matchLabels
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.compositionSelector.matchLabels
      type: FromCompositeFieldPath
    - fromFieldPath: spec.compositionUpdatePolicy
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.compositionUpdatePolicy
      type: FromCompositeFieldPath
    - fromFieldPath: spec.parameters.deletionPolicy
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.parameters.deletionPolicy
      type: FromCompositeFieldPath
    - fromFieldPath: spec.parameters.id
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.parameters.id
      type: FromCompositeFieldPath
    - fromFieldPath: spec.parameters.providerConfigName
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.parameters.providerConfigName
      type: FromCompositeFieldPath
    - fromFieldPath: spec.publishConnectionDetailsTo.configRef.name
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.publishConnectionDetailsTo.configRef.name
      type: FromCompositeFieldPath
    - fromFieldPath: spec.publishConnectionDetailsTo.metadata.annotations
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.publishConnectionDetailsTo.metadata.annotations
      type: FromCompositeFieldPath
    - fromFieldPath: spec.publishConnectionDetailsTo.metadata.labels
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.publishConnectionDetailsTo.metadata.labels
      type: FromCompositeFieldPath
    - fromFieldPath: spec.publishConnectionDetailsTo.metadata.type
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.publishConnectionDetailsTo.metadata.type
      type: FromCompositeFieldPath
    - fromFieldPath: spec.publishConnectionDetailsTo.name
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.publishConnectionDetailsTo.name
      type: FromCompositeFieldPath
    - fromFieldPath: spec.resourceRefs
      policy:
        fromFieldPath: Optional
      toFieldPath: spec.resourceRefs
      type: FromCompositeFieldPath
  - name: Labels
    patches:
    - fromFieldPath: metadata.labels['example-company/psp-element']
      policy:
        fromFieldPath: Optional
      toFieldPath: metadata.labels['example-company/psp-element']
      type: FromCompositeFieldPath
  resources:
  - base:
      apiVersion: aws.platform.upbound.io/v1alpha1
      kind: XNetwork
      metadata: {}
      spec:
        forProvider: {}
        parameters:
          region: us-west-2
        providerConfigRef:
          name: default
    name: XNetwork
    patches:
    - patchSetName: Name
      type: PatchSet
    - patchSetName: External-Name
      type: PatchSet
    - patchSetName: Common
      type: PatchSet
    - patchSetName: Parameters
      type: PatchSet
    - patchSetName: Labels
      type: PatchSet
    - fromFieldPath: status.connectionDetails.lastPublishedTime
      policy:
        fromFieldPath: Optional
      toFieldPath: status.connectionDetails.lastPublishedTime
      type: ToCompositeFieldPath
    - fromFieldPath: status.privateSubnetIds
      policy:
        fromFieldPath: Optional
      toFieldPath: status.privateSubnetIds
      type: ToCompositeFieldPath
    - fromFieldPath: status.publicSubnetIds
      policy:
        fromFieldPath: Optional
      toFieldPath: status.publicSubnetIds
      type: ToCompositeFieldPath
    - fromFieldPath: status.securityGroupIds
      policy:
        fromFieldPath: Optional
      toFieldPath: status.securityGroupIds
      type: ToCompositeFieldPath
    - fromFieldPath: status.subnetIds
      policy:
        fromFieldPath: Optional
      toFieldPath: status.subnetIds
      type: ToCompositeFieldPath
    - fromFieldPath: status.vpcId
      policy:
        fromFieldPath: Optional
      toFieldPath: status.vpcId
      type: ToCompositeFieldPath
    - fromFieldPath: metadata.annotations["crossplane.io/external-name"]
      policy:
        fromFieldPath: Optional
      toFieldPath: status.uid
      type: ToCompositeFieldPath
    - fromFieldPath: status.conditions
      policy:
        fromFieldPath: Optional
      toFieldPath: status.observed.conditions
      type: ToCompositeFieldPath
